{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>
  <div class="lesson_wrapper">
	  <div class="lesson_wrapper_intro">
			<div class="container">
				<div class="row">
				  <div class="col-md-7 col-sm-6 col-xs-12">
					  <div class="lesson_wrapper__intro__title">
							<span>{{ "Lesson Plan: "|t }}</span> {{ node.title.value }}
						</div>
						{% if node.field_term_resource_stage.value is not empty %}
							<div class="lesson_wrapper_intro__life_cycle">
								<span>{{ "Career Lifecycle Stage: "|t }}</span> {{ content.field_term_resource_stage }}
							</div>
						{% endif %}
						{% if node.field_resource_summary.0.entity.field_para_simple_body.getValue().0.value is not empty %}
							<div class="lesson_wrapper_intro__body">
								{{ node.field_resource_summary.0.entity.field_para_simple_body.getValue().0.value|raw }}
							</div>
						{% endif %}
						<div class="lesson_wrapper_intro__tags">
							{% if node.field_term_resource_grade.value is not empty %}
							  <div class="lesson_wrapper_intro__grade">
								  {{ content.field_term_resource_grade }}
							  </div>
							{% endif %}
							{% if node.field_resource_time.value is not empty %}
							  <div class="lesson_wrapper_intro__time">
								  {{ node.field_resource_time.value }}
							  </div>
							{% endif %}
						</div>
				    {{ content.field_resource_images }}
					</div>
					<div class="col-md-4 offset-md-1 col-sm-6 col-xs-12 align-item-end">
					  <div class="download-worksheets-container--wrapper">
						  <div class="download-worksheets-container">
								<a href="#" class="download-worksheets-button">
								  <p>{{ "Download All Worksheets"|t }}</br>{{ "(PDF & DOC)"|t }}</p>
								</a>
							</div>
							<div class="share-this-resource">
								{{ "Share Lesson Plan: "|t }}{{ content.sharethis }}
							</div>
						</div>
					</div>
				</div>
			 </div>
			<div class="download-worksheets-files-wrapper">
        <div class="download-worksheets-files-wrapper__inner">
          <div class="download-worksheets-files-wrapper__intro">
            <div class="download-worksheets-files-wrapper__intro--inner">
              <span class="title">{{ "Choose Download Option"|t }}</span><span class="close-popup"><a href="javascript:void(0)">{{ 'Close'|t }}</a></span>
            </div>
          </div>
          <div class="download-worksheets-files-wrapper__sub-title">
            {{ "Please select desired file format to download activity worksheet."|t }}
          </div>
          <ul class="file-list">
            <li>
              <div class="file-title {{ subentity.entity.field_media_document.0.entity.filemime.value|split('.')|last }}">
                {{ node.title.value }}
              </div>
              <div class="file-url">
                {{ content.entity_print_view_pdf }}
              </div>
            </li>
            {% set total_size = '' %}
            {% for key,subentity in node.field_resource_images if key|first != '#' %}
              {% set total_size = total_size + subentity.entity.field_media_document.0.entity.filesize.value %}
              <li>
                <div class="file-title {{ subentity.entity.field_media_document.0.entity.filemime.value|split('.')|last }}">
                  {{ subentity.entity.field_media_document.0.entity.filename.value }}
                </div>
                <div class="file-size">
                  {{ _self.bytesToSize(subentity.entity.field_media_document.0.entity.filesize.value) }}
                </div>
                <div class="file-url">
                  <a href="{{ file_url(subentity.entity.field_media_document.0.entity.uri.value) }}" title="{{ subentity.entity.field_media_document.0.entity.filename.value }}" download target="_blank">Download</a>
                </div>
              </li>
            {% endfor %}
            <li class="download-all">
              <div class="file-title-all">
                {{ "Download all (ZIP)"|t }}
              </div>
              <div class="size-all">{{ _self.bytesToSize(total_size) }}</div>
              <div class="file-url">
                <a href="/media_download_all/node/{{ node.nid.value }}/field_resource_images" title="Download All">Download All</a>
              </div>
            </li>
          </ul>
        </div>
      </div>
		</div>
    {# Main Container #}
    <div class="container">
      <div class="row">
        <div class="left-nav col-md-4">
          <div class="leftnavbar">
            {% for key,subentity in node.field_add_resource_description if key|first != '#' %}
            	<div class="leftnavbar--items {% if loop.first %} active {% endif %}">
                <div class="leftnavbar--title">
                  <a href="#paragraph-{{ subentity.entity.id.value }}">{{ subentity.entity.field_main_heading.value }}</a>
                </div>
                <div class="leftnavbar-item" id="toc" data-spy="affix" data-toggle="toc">
                  <ul>
                    {% for lkey,lsubentity in subentity.entity.field_simple_descriotion if key|first != '#' %}
                    {% if lsubentity.entity.field_para_simple_title.value is not empty %}
                      <li>
                        <a href="#paragraph-{{ lsubentity.entity.id.value }}">{{ lsubentity.entity.field_para_simple_title.value }}</a>
                      </li>
                    {% endif %}
                    {% endfor %}
                  </ul>
                </div>
					    </div>
				    {% endfor %}
          </div>
        </div>
        <div class="right-nav col-md-8">
          <div class="lesson_wrapper_main__lable_wrapper_main">
            {% for key,subentity in node.field_add_resource_description if key|first != '#' %}
						<div class="main-section {% if loop.first %} active {% endif %}" id="paragraph-{{ subentity.entity.id.value }}">
								  {% if subentity.entity.field_main_heading.value is not empty %}
							<div class="resource_wrapper_main__lable">
									   {{ subentity.entity.field_main_heading.value }}
								  </div>
						  {% endif %}
								  <div class="resource_wrapper_main_para">
									{% for lkey,lsubentity in subentity.entity.field_simple_descriotion if key|first != '#' %}
									<div class="resource_wrapper_main_para_item" id="paragraph-{{ lsubentity.entity.id.value }}">
										<div class="resource_wrapper_main_para_item__title">
										  {{ lsubentity.entity.field_para_simple_title.value }}
										</div>
										<div class="resource_wrapper_main_para_item__body">
										  {{ lsubentity.entity.field_para_simple_body.getValue().0.value|raw }}
										</div>
									</div>
									{% endfor %}
								  </div>
						  {% set next_key = key + 1 %}
						  {% if node.field_add_resource_description[next_key].entity.field_main_heading.value is not empty %}
							<div class="proceed-nex-link">
								<a href="#">{{ "Proceed to "|t }} {{ node.field_add_resource_description[next_key].entity.field_main_heading.value }}</a>
							</div>
						  {% endif %}
						
						</div>
					  {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>
</article>

{% macro bytesToSize(bytes) %}
{% spaceless %}
    {% set kilobyte = 1024 %}
    {% set megabyte = kilobyte * 1024 %}
    {% set gigabyte = megabyte * 1024 %}
    {% set terabyte = gigabyte * 1024 %}

    {% if bytes < kilobyte %}
        {{ bytes ~ ' B' }}
    {% elseif bytes < megabyte %}
        {{ (bytes / kilobyte)|number_format(2, '.') ~ ' KiB' }}
    {% elseif bytes < gigabyte %}
        {{ (bytes / megabyte)|number_format(2, '.') ~ ' MiB' }}
    {% elseif bytes < terabyte %}
        {{ (bytes / gigabyte)|number_format(2, '.') ~ ' GiB' }}
    {% else %}
        {{ (bytes / terabyte)|number_format(2, '.') ~ ' TiB' }}
    {% endif %}
{% endspaceless %}
{% endmacro %}
