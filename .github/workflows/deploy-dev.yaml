name: Deploy Dev

on:
  workflow_run:
    workflows:
      - CI
    types:
      - completed

env:
  IMAGE_ID: ${{ secrets.AWS_ECR_URI }}
  
  TF_VERSION: 1.0.5
  TG_VERSION: 0.31.4
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev

permissions:
  id-token: write
  contents: read

jobs:
  cd:
    name: cd
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TO_USE_DEV }}
          aws-region: ${{ secrets.AWS_REGION }}

#      - uses: peter-murray/terragrunt-github-action@v1.0.0
#        with:
#          terragrunt_version: ${{ env.TG_VERSION }}

#      - name: Terragrunt Apply
#        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
#        env:
#          app_image: ${{ env.IMAGE_ID }}:${{ github.event.workflow_run.head_sha }}
#          LICENSE_PLATE: ${{ secrets.MY_LICENSE_PLATE }}
#          AWS_ROLE: ${{ secrets.AWS_ROLE_ARN_TO_USE }}
#        run: terragrunt run-all apply --terragrunt-non-interactive
        
      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --name workbc-cluster --region ${{ secrets.AWS_REGION }}

      - name: Set image on Kubernetes deployment
        run: |
          kubectl set image deployment/cer drupal=${{ secrets.AWS_ECR_URI }}:${{ github.event.workflow_run.head_sha }} --namespace=app
